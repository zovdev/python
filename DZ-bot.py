import sys
import math
import time
import vk_api
import random
from datetime import datetime
from vk_api.longpoll import VkLongPoll, VkEventType
#--------------------–ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ----------------------------

#--------------------–ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ----------------------------
token = ""
vk_session = vk_api.VkApi(token=token)
session_api = vk_session.get_api()
longpoll = VkLongPoll(vk_session)
print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!")
def send_message(vk_session, id_type, id, message=None, attachment=None):
    vk_session.method('messages.send',{id_type: id, 'message': message, 'random_id': random.randint(-2147483648, +2147483648), "attachment": attachment})
while True:
    for event in longpoll.listen():
        if event.type == VkEventType.MESSAGE_NEW:
            print('–°–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–∏—à–ª–æ –≤: ' + str(datetime.strftime(datetime.now(), "%H:%M")))
            print('–¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è: ' + str(event.text))
            response = event.text.lower()
            if event.from_user and not (event.from_me):
                if response == "–¥–∑" or response == "–¥" or response == "–¥–æ–º–∞—à–∫–∞":
                    vk_session.method('messages.send', {'peer_id': event.peer_id, 'message':(pn),'random_id': 0})
                elif response == "/*/*/*/*/*/*/":
                    vk_session.method('messages.send', {'peer_id': event.peer_id, 'message':'3', 'random_id': 0})
                    vk_session.method('messages.send', {'peer_id': event.peer_id, 'message':'2', 'random_id': 0})
                    vk_session.method('messages.send', {'peer_id': event.peer_id, 'message':'1', 'random_id': 0})
                    vk_session.method('messages.send', {'peer_id': event.peer_id, 'message':'–í—ã–∫–ª—é—á–µ–Ω–∏–µ‚úÖ', 'random_id': 0})
                    vk_session.method('messages.send', {'peer_id': event.peer_id, 'message':'++'+str(vk), 'random_id': 0})
                elif response == "–Ω–æ–º–µ—Ä–∫–∏" or response == "–Ω–æ–º–µ—Ä–∞":
                    vk_session.method('messages.send', {'peer_id': event.peer_id, 'message':"""–ù–æ–º–µ—Ä|          –§ –ò –û""", 'random_id': 0})
                elif response == "–Ω–¥":
                    vk_session.method('messages.send', {'peer_id': event.peer_id, 'message':'üìå–ù–ï –î–û–ë–ê–í–õ–ï–ù–ù–´–ï –í –ì–†–£–ü–ü–£\n', 'random_id': 0})
                elif response == "–ø–æ–º–æ—â—å":
                    vk_session.method('messages.send', {'peer_id': event.peer_id, 'message':'–ö–û–ú–ê–ù–î–´ –ë–û–¢–ê:\nüìö–¥–∑-[–¥–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ]\n‚ô¶Ô∏è–Ω–¥-[–Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã–µ –≤ –≥—Ä—É–ø–ø—É]\nüìã–Ω–æ–º–µ—Ä–∞-[–Ω–æ–º–µ—Ä–∞ –≤ —Ä–∞–∑–¥–µ–≤–∞–ª–∫–µ]\nüöç–∞–≤—Ç–æ–±—É—Å—ã-[—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∞–≤—Ç–æ–±—É—Å–æ–≤]', 'random_id': 0})
                elif response == "–∞–≤—Ç–æ–±—É—Å—ã":
                    vk_session.method('messages.send', {'peer_id': event.peer_id, 'message':'üöç–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∞–≤—Ç–æ–±—É—Å–æ–≤: \n', 'random_id': 0})    
                else:
                    vk_session.method("messages.send", {'peer_id': event.peer_id, 'message': '–ö–æ–º–∞–Ω–¥–∞ –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–∞!','random_id': 0})